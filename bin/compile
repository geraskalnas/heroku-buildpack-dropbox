#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

function say {
  echo "       $*"
}
function topic {
  echo "-----> $*"
}

BP_DIR="$(cd "$(dirname "$0")"/.. && pwd)"


topic Configuring Dropbox Uploader config file...
echo "OAUTH_ACCESS_TOKEN=${DROPBOX_API_TOKEN}" > $1/.dropbox_uploader

topic Adding Dropbox Sync...
du_script=$1/bin/${DROPBOX_UPLOADER_SCRIPT_NAME:-'dropbox_uploader.sh'}
mkdir -p $1/bin
curl "https://raw.githubusercontent.com/andreafabrizi/Dropbox-Uploader/master/dropbox_uploader.sh" -o $du_script
chmod +x $du_script
# ./dropbox_uploader.sh help to list all options
# more info here https://github.com/andreafabrizi/Dropbox-Uploader

topic Writing dropbox scripts
restore_script=$1/bin/${DROPBOX_RESTORE_SCRIPT_NAME:-'restore_dropbox.sh'}
say $restore_script
mkdir -p $1/bin
cat <<EOF > $restore_script
#!/usr/bin/env bash

cd \$(dirname \$0)/..

pre=\${DROPBOX_DESTINATION_PREFIX:-'/'}

bin/\$DROPBOX_UPLOADER_SCRIPT_NAME download \${pre}backup.zip 
unzip backup.zip
rm backup.zip
EOF
chmod +x $restore_script

backup_script=$1/bin/${DROPBOX_BACKUP_SCRIPT_NAME:-'backup_dropbox.sh'}
say $backup_script
cat <<EOF > $backup_script
#!/usr/bin/env bash

cd \$(dirname \$0)/..
uploader=bin/\$DROPBOX_UPLOADER_SCRIPT_NAME

pre=\${DROPBOX_DESTINATION_PREFIX:-'/'}

zip -r backup.zip \$DROPBOX_FILES_TO_BACKUP;
$uploader delete \${pre}backup.zip
$uploader upload backup.zip \${pre}backup.zip
$uploader copy \${pre}backup.zip \${pre}backup\$(date "+%Y.%m.%d-%H:%M:%S").zip
rm backup.zip
EOF
chmod +x $backup_script

start_script=$1/bin/${DROPBOX_STARTUP_SCRIPT_NAME:-'start_sync_dropbox.sh'}
say $start_script
cat <<EOF > $start_script
#!/usr/bin/env bash

cd \$(dirname \$0)

\$DROPBOX_RESTORE_SCRIPT_NAME

while true
do
sleep \$DROPBOX_BACKUP_DELAY
\$DROPBOX_BACKUP_SCRIPT_NAME
done
EOF
chmod +x $start_script
